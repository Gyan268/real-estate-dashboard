// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: real_estate.proto
// Protobuf C++ Version: 5.29.3

#include "real_estate.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace realestate {

inline constexpr PropertyUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{0},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PropertyUpdate::PropertyUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyUpdateDefaultTypeInternal() {}
  union {
    PropertyUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyUpdateDefaultTypeInternal _PropertyUpdate_default_instance_;

inline constexpr Property::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : brokered_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        street_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        zip_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prev_sold_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        bedrooms_{0},
        price_{0},
        acre_lot_{0},
        house_size_{0},
        bathrooms_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Property::Property(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyDefaultTypeInternal() {}
  union {
    Property _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyDefaultTypeInternal _Property_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
}  // namespace realestate
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_real_5festate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_real_5festate_2eproto = nullptr;
const ::uint32_t
    TableStruct_real_5festate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.brokered_by_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.bedrooms_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.bathrooms_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.acre_lot_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.street_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.city_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.zip_code_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.house_size_),
        PROTOBUF_FIELD_OFFSET(::realestate::Property, _impl_.prev_sold_date_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::realestate::PropertyUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::realestate::PropertyUpdate, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::realestate::PropertyUpdate, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::realestate::PropertyUpdate, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::realestate::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::realestate::Property)},
        {21, -1, -1, sizeof(::realestate::PropertyUpdate)},
        {32, -1, -1, sizeof(::realestate::Empty)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::realestate::_Property_default_instance_._instance,
    &::realestate::_PropertyUpdate_default_instance_._instance,
    &::realestate::_Empty_default_instance_._instance,
};
const char descriptor_table_protodef_real_5festate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021real_estate.proto\022\nrealestate\"\354\001\n\010Prop"
    "erty\022\n\n\002id\030\001 \001(\005\022\023\n\013brokered_by\030\002 \001(\t\022\016\n"
    "\006status\030\003 \001(\t\022\r\n\005price\030\004 \001(\001\022\020\n\010bedrooms"
    "\030\005 \001(\005\022\021\n\tbathrooms\030\006 \001(\005\022\020\n\010acre_lot\030\007 "
    "\001(\001\022\016\n\006street\030\010 \001(\t\022\014\n\004city\030\t \001(\t\022\r\n\005sta"
    "te\030\n \001(\t\022\020\n\010zip_code\030\013 \001(\t\022\022\n\nhouse_size"
    "\030\014 \001(\001\022\026\n\016prev_sold_date\030\r \001(\t\";\n\016Proper"
    "tyUpdate\022\n\n\002id\030\001 \001(\005\022\r\n\005price\030\002 \001(\001\022\016\n\006s"
    "tatus\030\003 \001(\t\"\007\n\005Empty2\242\001\n\021RealEstateServi"
    "ce\022C\n\026StreamPropertyListings\022\021.realestat"
    "e.Empty\032\024.realestate.Property0\001\022H\n\025Strea"
    "mPropertyUpdates\022\021.realestate.Empty\032\032.re"
    "alestate.PropertyUpdate0\001b\006proto3"
};
static ::absl::once_flag descriptor_table_real_5festate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_real_5festate_2eproto = {
    false,
    false,
    513,
    descriptor_table_protodef_real_5festate_2eproto,
    "real_estate.proto",
    &descriptor_table_real_5festate_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_real_5festate_2eproto::offsets,
    file_level_enum_descriptors_real_5festate_2eproto,
    file_level_service_descriptors_real_5festate_2eproto,
};
namespace realestate {
// ===================================================================

class Property::_Internal {
 public:
};

Property::Property(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:realestate.Property)
}
inline PROTOBUF_NDEBUG_INLINE Property::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::realestate::Property& from_msg)
      : brokered_by_(arena, from.brokered_by_),
        status_(arena, from.status_),
        street_(arena, from.street_),
        city_(arena, from.city_),
        state_(arena, from.state_),
        zip_code_(arena, from.zip_code_),
        prev_sold_date_(arena, from.prev_sold_date_),
        _cached_size_{0} {}

Property::Property(
    ::google::protobuf::Arena* arena,
    const Property& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Property* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, bathrooms_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::bathrooms_));

  // @@protoc_insertion_point(copy_constructor:realestate.Property)
}
inline PROTOBUF_NDEBUG_INLINE Property::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : brokered_by_(arena),
        status_(arena),
        street_(arena),
        city_(arena),
        state_(arena),
        zip_code_(arena),
        prev_sold_date_(arena),
        _cached_size_{0} {}

inline void Property::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, bathrooms_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::bathrooms_));
}
Property::~Property() {
  // @@protoc_insertion_point(destructor:realestate.Property)
  SharedDtor(*this);
}
inline void Property::SharedDtor(MessageLite& self) {
  Property& this_ = static_cast<Property&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.brokered_by_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.street_.Destroy();
  this_._impl_.city_.Destroy();
  this_._impl_.state_.Destroy();
  this_._impl_.zip_code_.Destroy();
  this_._impl_.prev_sold_date_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Property::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Property(arena);
}
constexpr auto Property::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Property),
                                            alignof(Property));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Property::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Property_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Property::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Property>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Property::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Property>(), &Property::ByteSizeLong,
            &Property::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Property, _impl_._cached_size_),
        false,
    },
    &Property::kDescriptorMethods,
    &descriptor_table_real_5festate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Property::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 90, 2> Property::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::realestate::Property>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Property, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.id_)}},
    // string brokered_by = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.brokered_by_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.status_)}},
    // double price = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.price_)}},
    // int32 bedrooms = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Property, _impl_.bedrooms_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.bedrooms_)}},
    // int32 bathrooms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Property, _impl_.bathrooms_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.bathrooms_)}},
    // double acre_lot = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.acre_lot_)}},
    // string street = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.street_)}},
    // string city = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.city_)}},
    // string state = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.state_)}},
    // string zip_code = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.zip_code_)}},
    // double house_size = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.house_size_)}},
    // string prev_sold_date = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.prev_sold_date_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string brokered_by = 2;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.brokered_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 4;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 bedrooms = 5;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.bedrooms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bathrooms = 6;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.bathrooms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double acre_lot = 7;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.acre_lot_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string street = 8;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.street_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 9;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.city_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 10;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string zip_code = 11;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.zip_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double house_size = 12;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.house_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string prev_sold_date = 13;
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.prev_sold_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\13\6\0\0\0\0\6\4\5\10\0\16\0\0"
    "realestate.Property"
    "brokered_by"
    "status"
    "street"
    "city"
    "state"
    "zip_code"
    "prev_sold_date"
  }},
};

PROTOBUF_NOINLINE void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:realestate.Property)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.brokered_by_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.street_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.zip_code_.ClearToEmpty();
  _impl_.prev_sold_date_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bathrooms_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.bathrooms_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Property::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Property& this_ = static_cast<const Property&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Property::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Property& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:realestate.Property)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // string brokered_by = 2;
          if (!this_._internal_brokered_by().empty()) {
            const std::string& _s = this_._internal_brokered_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.brokered_by");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string status = 3;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.status");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double price = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_price(), target);
          }

          // int32 bedrooms = 5;
          if (this_._internal_bedrooms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_bedrooms(), target);
          }

          // int32 bathrooms = 6;
          if (this_._internal_bathrooms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_bathrooms(), target);
          }

          // double acre_lot = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_acre_lot()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_acre_lot(), target);
          }

          // string street = 8;
          if (!this_._internal_street().empty()) {
            const std::string& _s = this_._internal_street();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.street");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string city = 9;
          if (!this_._internal_city().empty()) {
            const std::string& _s = this_._internal_city();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.city");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string state = 10;
          if (!this_._internal_state().empty()) {
            const std::string& _s = this_._internal_state();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.state");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string zip_code = 11;
          if (!this_._internal_zip_code().empty()) {
            const std::string& _s = this_._internal_zip_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.zip_code");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // double house_size = 12;
          if (::absl::bit_cast<::uint64_t>(this_._internal_house_size()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                12, this_._internal_house_size(), target);
          }

          // string prev_sold_date = 13;
          if (!this_._internal_prev_sold_date().empty()) {
            const std::string& _s = this_._internal_prev_sold_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.Property.prev_sold_date");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:realestate.Property)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Property::ByteSizeLong(const MessageLite& base) {
          const Property& this_ = static_cast<const Property&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Property::ByteSizeLong() const {
          const Property& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:realestate.Property)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string brokered_by = 2;
            if (!this_._internal_brokered_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_brokered_by());
            }
            // string status = 3;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string street = 8;
            if (!this_._internal_street().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_street());
            }
            // string city = 9;
            if (!this_._internal_city().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_city());
            }
            // string state = 10;
            if (!this_._internal_state().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_state());
            }
            // string zip_code = 11;
            if (!this_._internal_zip_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_zip_code());
            }
            // string prev_sold_date = 13;
            if (!this_._internal_prev_sold_date().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_prev_sold_date());
            }
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // int32 bedrooms = 5;
            if (this_._internal_bedrooms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bedrooms());
            }
            // double price = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // double acre_lot = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_acre_lot()) != 0) {
              total_size += 9;
            }
            // double house_size = 12;
            if (::absl::bit_cast<::uint64_t>(this_._internal_house_size()) != 0) {
              total_size += 9;
            }
            // int32 bathrooms = 6;
            if (this_._internal_bathrooms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bathrooms());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Property::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Property*>(&to_msg);
  auto& from = static_cast<const Property&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:realestate.Property)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_brokered_by().empty()) {
    _this->_internal_set_brokered_by(from._internal_brokered_by());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_street().empty()) {
    _this->_internal_set_street(from._internal_street());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_zip_code().empty()) {
    _this->_internal_set_zip_code(from._internal_zip_code());
  }
  if (!from._internal_prev_sold_date().empty()) {
    _this->_internal_set_prev_sold_date(from._internal_prev_sold_date());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_bedrooms() != 0) {
    _this->_impl_.bedrooms_ = from._impl_.bedrooms_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_acre_lot()) != 0) {
    _this->_impl_.acre_lot_ = from._impl_.acre_lot_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_house_size()) != 0) {
    _this->_impl_.house_size_ = from._impl_.house_size_;
  }
  if (from._internal_bathrooms() != 0) {
    _this->_impl_.bathrooms_ = from._impl_.bathrooms_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:realestate.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Property::InternalSwap(Property* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.brokered_by_, &other->_impl_.brokered_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.street_, &other->_impl_.street_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.zip_code_, &other->_impl_.zip_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_sold_date_, &other->_impl_.prev_sold_date_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Property, _impl_.bathrooms_)
      + sizeof(Property::_impl_.bathrooms_)
      - PROTOBUF_FIELD_OFFSET(Property, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Property::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PropertyUpdate::_Internal {
 public:
};

PropertyUpdate::PropertyUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:realestate.PropertyUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PropertyUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::realestate::PropertyUpdate& from_msg)
      : status_(arena, from.status_),
        _cached_size_{0} {}

PropertyUpdate::PropertyUpdate(
    ::google::protobuf::Arena* arena,
    const PropertyUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PropertyUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:realestate.PropertyUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PropertyUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        _cached_size_{0} {}

inline void PropertyUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::id_));
}
PropertyUpdate::~PropertyUpdate() {
  // @@protoc_insertion_point(destructor:realestate.PropertyUpdate)
  SharedDtor(*this);
}
inline void PropertyUpdate::SharedDtor(MessageLite& self) {
  PropertyUpdate& this_ = static_cast<PropertyUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PropertyUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PropertyUpdate(arena);
}
constexpr auto PropertyUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PropertyUpdate),
                                            alignof(PropertyUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PropertyUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PropertyUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PropertyUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PropertyUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PropertyUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PropertyUpdate>(), &PropertyUpdate::ByteSizeLong,
            &PropertyUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_._cached_size_),
        false,
    },
    &PropertyUpdate::kDescriptorMethods,
    &descriptor_table_real_5festate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PropertyUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 40, 2> PropertyUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::realestate::PropertyUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropertyUpdate, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.id_)}},
    // double price = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.price_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double price = 2;
    {PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\0\6\0\0\0\0"
    "realestate.PropertyUpdate"
    "status"
  }},
};

PROTOBUF_NOINLINE void PropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:realestate.PropertyUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PropertyUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PropertyUpdate& this_ = static_cast<const PropertyUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PropertyUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PropertyUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:realestate.PropertyUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // double price = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_price(), target);
          }

          // string status = 3;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "realestate.PropertyUpdate.status");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:realestate.PropertyUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PropertyUpdate::ByteSizeLong(const MessageLite& base) {
          const PropertyUpdate& this_ = static_cast<const PropertyUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PropertyUpdate::ByteSizeLong() const {
          const PropertyUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:realestate.PropertyUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string status = 3;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // double price = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PropertyUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropertyUpdate*>(&to_msg);
  auto& from = static_cast<const PropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:realestate.PropertyUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyUpdate::CopyFrom(const PropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:realestate.PropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PropertyUpdate::InternalSwap(PropertyUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.id_)
      + sizeof(PropertyUpdate::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(PropertyUpdate, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata PropertyUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:realestate.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:realestate.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_real_5festate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::realestate::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace realestate
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_real_5festate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
